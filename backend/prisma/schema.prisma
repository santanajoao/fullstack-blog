generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Topic {
  id       String @id @default(uuid())
  name     String @unique
  imageUrl String @unique @map("image_url") @db.VarChar(300)

  posts      Post[]
  postTopics PostTopic[]

  @@map("topics")
}

model Account {
  id       String  @id @default(uuid())
  username String
  about    String? @db.VarChar(200)
  email    String  @unique
  password String
  imageUrl String? @db.MediumText

  posts    Post[]
  likes    Likes[]
  comments Comment[]

  @@map("accounts")
}

model Post {
  id          String   @id @default(uuid())
  imageUrl    String   @map("image_url") @db.MediumText
  title       String   @db.VarChar(70)
  description String   @db.VarChar(200)
  content     String   @db.VarChar(4000)
  createdAt   DateTime @default(now()) @map("created_at")

  accountId String  @map("account_id")
  account   Account @relation(fields: [accountId], references: [id])

  topics     Topic[]
  postTopics PostTopic[]
  likes      Likes[]
  comments   Comment[]

  @@map("posts")
}

model Comment {
  id String @id @default(uuid())
  content String

  accountId String  @map("account_id")
  account   Account @relation(fields: [accountId], references: [id])

  postId String @map("post_id")
  post   Post   @relation(fields: [postId], references: [id])
}

model PostTopic {
  topicId String @map("topic_id")
  topic   Topic  @relation(fields: [topicId], references: [id])

  postId String @map("post_id")
  post   Post   @relation(fields: [postId], references: [id])

  @@id([postId, topicId])
  @@map("post_topics")
}

model Likes {
  accountId String  @map("account_id")
  account   Account @relation(fields: [accountId], references: [id])

  postId String @map("post_id")
  post   Post   @relation(fields: [postId], references: [id])

  @@id([accountId, postId])
  @@map("likes")
}
